cmake_minimum_required(VERSION 3.10)
project(beenuked)

# Require C++17 (and position independent code)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

set(BEENUKED_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/BeeNuked")

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "Release")
endif()

add_subdirectory(BeeNuked/OPL)
add_subdirectory(BeeNuked/OPL3)
add_subdirectory(BeeNuked/OPLL)
add_subdirectory(BeeNuked/OPN2)
add_subdirectory(BeeNuked/OPM)
add_subdirectory(BeeNuked/OPN)
add_subdirectory(BeeNuked/OPNB)
add_subdirectory(BeeNuked/OPX)

add_library(beenuked INTERFACE)
target_link_libraries(beenuked INTERFACE ym2413 ym2612 ym2151 ym2610 ym2203 ym3526 ymf262 ymf271)
target_include_directories(beenuked INTERFACE ${BEENUKED_INCLUDE_DIR})
add_library(libbeenuked ALIAS beenuked)


if (WIN32)
    message(STATUS "Operating system is Windows.")
    if (CMAKE_CXX_COMPILER_ID STREQUAL GNU)
	target_compile_options(beenuked INTERFACE -Wall)
	message(STATUS "Compiler is MinGW.")
    elseif (CMAKE_CXX_COMPILER_ID STREQUAL MSVC)
	message(WARNING "MSVC support is HIGHLY experimental, and may not even compile correctly, so be EXTREMELY careful here!")
	target_compile_options(beenuked INTERFACE /W4)
	message(STATUS "Compiler is MSVC.")
    elseif (CMAKE_CXX_COMPILER_ID STREQUAL Clang)
	message(WARNING "Clang support on Windows is HIGHLY experimental, and may not even compile correctly, so be EXTREMELY careful here!")
	target_compile_options(beenuked INTERFACE -Wall)
	message(STATUS "Compiler is Clang.")
    else()
	message(SEND_ERROR "Compiler not supported.")
	return()
    endif()
elseif(UNIX AND NOT APPLE)
    message(STATUS "Operating system is Linux.")
    if (CMAKE_CXX_COMPILER_ID STREQUAL GNU)
	target_compile_options(beenuked INTERFACE -Wall)
	message(STATUS "Compiler is GCC.")
    elseif (CMAKE_CXX_COMPILER_ID STREQUAL Clang)
	target_compile_options(beenuked INTERFACE -Wall)
	message(STATUS "Compiler is Clang.")
    else()
	message(SEND_ERROR "Compiler not supported.")
	return()
    endif()
elseif(APPLE)
    message(STATUS "Operating system is Mac.")
    if (CMAKE_CXX_COMPILER_ID STREQUAL AppleClang)
	target_compile_options(beenuked INTERFACE -Wall)
	message(STATUS "Compiler is AppleClang.")
    else()
	message(SEND_ERROR "Compiler not supported.")
	return()
    endif()
else()
    message(SEND_ERROR "Operating system not supported.")
    return()
endif()